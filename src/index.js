/**
 * VRChat API Documentation
 * ![VRChat API Banner](https://raw.githubusercontent.com/vrchatapi/vrchatapi.github.io/master/assets/apibanner.png)  # VRChat API Documentation This project is an [OPEN Open Source Project](https://openopensource.org)  Individuals making significant and valuable contributions are given commit-access to the project to contribute as they see fit. This project is more like an open wiki than a standard guarded open source project.  ## Disclaimer  This is the official response of the VRChat Team (from Tupper more specifically) on the usage of the VRChat API.  > **Use of the API using applications other than the approved methods (website, VRChat application) are not officially supported. You may use the API for your own application, but keep these guidelines in mind:** > * We do not provide documentation or support for the API. > * Do not make queries to the API more than once per 60 seconds. > * Abuse of the API may result in account termination. > * Access to API endpoints may break at any given time, with no warning.  As stated, this documentation was not created with the help of the official VRChat team. Therefore this documentation is not an official documentation of the VRChat API and may not be always up to date with the latest versions. If you find that a page or endpoint is not longer valid please create an issue and tell us so we can fix it.  ## Get in touch with us!  [https://discord.gg/qjZE9C9fkB#vrchat-api](https://discord.gg/qjZE9C9fkB)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: me@ruby.js.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Config from './model/Config';
import ConfigAnnouncements from './model/ConfigAnnouncements';
import ConfigDownloadUrls from './model/ConfigDownloadUrls';
import ConfigDynamicWorldRows from './model/ConfigDynamicWorldRows';
import ConfigEvents from './model/ConfigEvents';
import CurrentUser from './model/CurrentUser';
import DeploymentGroup from './model/DeploymentGroup';
import DeveloperType from './model/DeveloperType';
import Error from './model/Error';
import File from './model/File';
import FileData from './model/FileData';
import FileStatus from './model/FileStatus';
import FileVersion from './model/FileVersion';
import InlineObject from './model/InlineObject';
import InlineObject1 from './model/InlineObject1';
import InlineObject2 from './model/InlineObject2';
import InlineObject3 from './model/InlineObject3';
import InlineObject4 from './model/InlineObject4';
import InlineResponse200 from './model/InlineResponse200';
import InlineResponse2001 from './model/InlineResponse2001';
import InlineResponse2002 from './model/InlineResponse2002';
import InlineResponse2003 from './model/InlineResponse2003';
import InlineResponse2004 from './model/InlineResponse2004';
import InlineResponse2005 from './model/InlineResponse2005';
import InlineResponse401 from './model/InlineResponse401';
import LimitedUser from './model/LimitedUser';
import LimitedWorld from './model/LimitedWorld';
import MIMEType from './model/MIMEType';
import Notification from './model/Notification';
import NotificationType from './model/NotificationType';
import ReleaseStatus from './model/ReleaseStatus';
import Response from './model/Response';
import Success from './model/Success';
import User from './model/User';
import UserState from './model/UserState';
import UserStatus from './model/UserStatus';
import AuthenticationApi from './api/AuthenticationApi';
import FilesApi from './api/FilesApi';
import FriendsApi from './api/FriendsApi';
import NotificationsApi from './api/NotificationsApi';
import SystemApi from './api/SystemApi';
import UsersApi from './api/UsersApi';
import WorldsApi from './api/WorldsApi';


/**
* _VRChat_API_Banner_https__raw_githubusercontent_com_vrchatapi_vrchatapi_github_io_master_assets_apibanner_png_VRChat_API_DocumentationThis_project_is_an__OPEN_Open_Source_Project_https__openopensource_orgIndividuals_making_significant_and_valuable_contributions_are_givencommit_access_to_the_project_to_contribute_as_they_see_fit__This_projectis_more_like_an_open_wiki_than_a_standard_guarded_open_source_project__DisclaimerThis_is_the_official_response_of_the_VRChat_Team__from_Tupper_more_specifically_on_the_usage_of_the_VRChat_API__Use_of_the_API_using_applications_other_than_the_approved_methods__website_VRChat_application_are_not_officially_supported__You_may_use_the_API_for_your_own_application_but_keep_these_guidelines_in_mind__We_do_not_provide_documentation_or_support_for_the_API___Do_not_make_queries_to_the_API_more_than_once_per_60_seconds___Abuse_of_the_API_may_result_in_account_termination___Access_to_API_endpoints_may_break_at_any_given_time_with_no_warning_As_stated_this_documentation_was_not_created_with_the_help_of_the_official_VRChat_team__Therefore_this_documentation_is_not_an_official_documentation_of_the_VRChat_API_and_may_not_be_always_up_to_date_with_the_latest_versions__If_you_find_that_a_page_or_endpoint_is_not_longer_valid_please_create_an_issue_and_tell_us_so_we_can_fix_it__Get_in_touch_with_us_https__discord_gg_qjZE9C9fkBvrchat_api_https__discord_gg_qjZE9C9fkB.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var vrchatapi = require('index'); // See note below*.
* var xxxSvc = new vrchatapi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new vrchatapi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new vrchatapi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new vrchatapi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Config model constructor.
     * @property {module:model/Config}
     */
    Config,

    /**
     * The ConfigAnnouncements model constructor.
     * @property {module:model/ConfigAnnouncements}
     */
    ConfigAnnouncements,

    /**
     * The ConfigDownloadUrls model constructor.
     * @property {module:model/ConfigDownloadUrls}
     */
    ConfigDownloadUrls,

    /**
     * The ConfigDynamicWorldRows model constructor.
     * @property {module:model/ConfigDynamicWorldRows}
     */
    ConfigDynamicWorldRows,

    /**
     * The ConfigEvents model constructor.
     * @property {module:model/ConfigEvents}
     */
    ConfigEvents,

    /**
     * The CurrentUser model constructor.
     * @property {module:model/CurrentUser}
     */
    CurrentUser,

    /**
     * The DeploymentGroup model constructor.
     * @property {module:model/DeploymentGroup}
     */
    DeploymentGroup,

    /**
     * The DeveloperType model constructor.
     * @property {module:model/DeveloperType}
     */
    DeveloperType,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The File model constructor.
     * @property {module:model/File}
     */
    File,

    /**
     * The FileData model constructor.
     * @property {module:model/FileData}
     */
    FileData,

    /**
     * The FileStatus model constructor.
     * @property {module:model/FileStatus}
     */
    FileStatus,

    /**
     * The FileVersion model constructor.
     * @property {module:model/FileVersion}
     */
    FileVersion,

    /**
     * The InlineObject model constructor.
     * @property {module:model/InlineObject}
     */
    InlineObject,

    /**
     * The InlineObject1 model constructor.
     * @property {module:model/InlineObject1}
     */
    InlineObject1,

    /**
     * The InlineObject2 model constructor.
     * @property {module:model/InlineObject2}
     */
    InlineObject2,

    /**
     * The InlineObject3 model constructor.
     * @property {module:model/InlineObject3}
     */
    InlineObject3,

    /**
     * The InlineObject4 model constructor.
     * @property {module:model/InlineObject4}
     */
    InlineObject4,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002,

    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003,

    /**
     * The InlineResponse2004 model constructor.
     * @property {module:model/InlineResponse2004}
     */
    InlineResponse2004,

    /**
     * The InlineResponse2005 model constructor.
     * @property {module:model/InlineResponse2005}
     */
    InlineResponse2005,

    /**
     * The InlineResponse401 model constructor.
     * @property {module:model/InlineResponse401}
     */
    InlineResponse401,

    /**
     * The LimitedUser model constructor.
     * @property {module:model/LimitedUser}
     */
    LimitedUser,

    /**
     * The LimitedWorld model constructor.
     * @property {module:model/LimitedWorld}
     */
    LimitedWorld,

    /**
     * The MIMEType model constructor.
     * @property {module:model/MIMEType}
     */
    MIMEType,

    /**
     * The Notification model constructor.
     * @property {module:model/Notification}
     */
    Notification,

    /**
     * The NotificationType model constructor.
     * @property {module:model/NotificationType}
     */
    NotificationType,

    /**
     * The ReleaseStatus model constructor.
     * @property {module:model/ReleaseStatus}
     */
    ReleaseStatus,

    /**
     * The Response model constructor.
     * @property {module:model/Response}
     */
    Response,

    /**
     * The Success model constructor.
     * @property {module:model/Success}
     */
    Success,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserState model constructor.
     * @property {module:model/UserState}
     */
    UserState,

    /**
     * The UserStatus model constructor.
     * @property {module:model/UserStatus}
     */
    UserStatus,

    /**
    * The AuthenticationApi service constructor.
    * @property {module:api/AuthenticationApi}
    */
    AuthenticationApi,

    /**
    * The FilesApi service constructor.
    * @property {module:api/FilesApi}
    */
    FilesApi,

    /**
    * The FriendsApi service constructor.
    * @property {module:api/FriendsApi}
    */
    FriendsApi,

    /**
    * The NotificationsApi service constructor.
    * @property {module:api/NotificationsApi}
    */
    NotificationsApi,

    /**
    * The SystemApi service constructor.
    * @property {module:api/SystemApi}
    */
    SystemApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi,

    /**
    * The WorldsApi service constructor.
    * @property {module:api/WorldsApi}
    */
    WorldsApi
};
